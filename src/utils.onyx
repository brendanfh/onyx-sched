//+optional-semicolons

package sched

use core.sync
use runtime

Lock :: struct (T: type_expr) {
    mutex: sync.Mutex
    value: T
}

Lock.make :: (v: $T) => Lock(T).{
    value = v
}

Lock.with :: macro (l: &Lock, body: Code) -> u32 {
    sync.scoped_mutex(&l.mutex)

    #unquote body(&l.value)
   
    return 0
}



Alarm :: struct {
    _flag: u32
}

Alarm.sleep :: (alarm: &Alarm, duration: u32) {
    runtime.platform.__futex_wait(&alarm._flag, 0, duration)
    alarm._flag = 0
}

Alarm.wakeup :: (alarm: &Alarm) {
    alarm._flag = 1
    runtime.platform.__futex_wake(&alarm._flag, 1)
}

