//+optional-semicolons

#load "./module.onyx"

use sched { Scheduler }
use core {
    stdio
    aprintf
    alloc
    io
    conv
    os
}

main :: () {
    s := Scheduler.make()

    cancel_this := s->once_in(5 * 1000, say_hi, "test")
    s->once_in(20 * 1000, say_hi, "test 2")

    s->every(1000, say_hi, "TICK")

    s->start()

    stdin := io.reader_make(&stdio.stream)
    while true {
        line := io.read_line(&stdin)
        num  := conv.parse(u64, line) ?? 0
        if num > 0 {
            s->once_in(num, say_hi, .{
                message = aprintf("SLEPT FOR {}ms", num)
                queued_at = os.time()
            })
        }

        if num == 69 {
            s->cancel(cancel_this)
        }
    }
}

say_hi :: data => {
    logf(.Info, "[{}]   {}", os.time(), *data)
}
